{"ast":null,"code":"var _jsxFileName = \"/home/deepak-silaych/Desktop/sem6/ce343/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DataPanel from './components/DataPanel';\nimport MethodSelector from './components/MethodSelector';\nimport ResultsSection from './components/ResultsSection';\nimport MapComponent from './components/MapComponent';\nimport { calculateArithmeticMean, calculateNormalRatio, calculateIDW } from './utils/calculations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [stations, setStations] = useState([]);\n  const [selectedMethod, setSelectedMethod] = useState('');\n  const [results, setResults] = useState(null);\n  const [normalPrecipitation, setNormalPrecipitation] = useState('');\n  const handleDataUpload = data => {\n    // Process CSV data\n    const processedData = data.slice(1).map((row, index) => ({\n      name: `Station ${index + 1}`,\n      lat: parseFloat(row[0]),\n      lng: parseFloat(row[1]),\n      precipitation: parseFloat(row[2])\n    }));\n    setStations(processedData);\n  };\n  const handleManualAdd = data => {\n    const newStation = {\n      name: `Station ${stations.length + 1}`,\n      lat: parseFloat(data.latitude),\n      lng: parseFloat(data.longitude),\n      precipitation: parseFloat(data.precipitation)\n    };\n    setStations([...stations, newStation]);\n  };\n  const calculateResults = () => {\n    if (stations.length === 0 || !selectedMethod) {\n      alert('Please add stations and select a method');\n      return;\n    }\n    let calculatedValue;\n    switch (selectedMethod) {\n      case 'arithmetic':\n        calculatedValue = calculateArithmeticMean(stations);\n        break;\n      case 'normal-ratio':\n        if (!normalPrecipitation) {\n          alert('Please enter normal precipitation value');\n          return;\n        }\n        calculatedValue = calculateNormalRatio(stations, parseFloat(normalPrecipitation));\n        break;\n      case 'idw':\n        // For IDW, we'll use the center of all stations as the target point\n        const targetLat = stations.reduce((sum, s) => sum + s.lat, 0) / stations.length;\n        const targetLng = stations.reduce((sum, s) => sum + s.lng, 0) / stations.length;\n        calculatedValue = calculateIDW(stations, targetLat, targetLng);\n        break;\n      default:\n        calculatedValue = 0;\n    }\n    setResults({\n      calculatedValue,\n      stations,\n      method: selectedMethod\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto py-6 px-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-900\",\n          children: \"Precipitation Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(DataPanel, {\n            onDataUpload: handleDataUpload,\n            onManualAdd: handleManualAdd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MethodSelector, {\n            selectedMethod: selectedMethod,\n            onMethodChange: setSelectedMethod,\n            normalPrecipitation: normalPrecipitation,\n            onNormalPrecipitationChange: setNormalPrecipitation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: calculateResults,\n            className: \"w-full bg-blue-500 text-white p-3 rounded-lg hover:bg-blue-600\",\n            children: \"Calculate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: [/*#__PURE__*/_jsxDEV(MapComponent, {\n            stations: stations\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ResultsSection, {\n            results: results\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5vjTTlqMWHBJXBCtyOd9giuj1yU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DataPanel","MethodSelector","ResultsSection","MapComponent","calculateArithmeticMean","calculateNormalRatio","calculateIDW","jsxDEV","_jsxDEV","App","_s","stations","setStations","selectedMethod","setSelectedMethod","results","setResults","normalPrecipitation","setNormalPrecipitation","handleDataUpload","data","processedData","slice","map","row","index","name","lat","parseFloat","lng","precipitation","handleManualAdd","newStation","length","latitude","longitude","calculateResults","alert","calculatedValue","targetLat","reduce","sum","s","targetLng","method","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDataUpload","onManualAdd","onMethodChange","onNormalPrecipitationChange","onClick","_c","$RefreshReg$"],"sources":["/home/deepak-silaych/Desktop/sem6/ce343/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport DataPanel from './components/DataPanel';\nimport MethodSelector from './components/MethodSelector';\nimport ResultsSection from './components/ResultsSection';\nimport MapComponent from './components/MapComponent';\nimport { calculateArithmeticMean, calculateNormalRatio, calculateIDW } from './utils/calculations';\n\nfunction App() {\n  const [stations, setStations] = useState([]);\n  const [selectedMethod, setSelectedMethod] = useState('');\n  const [results, setResults] = useState(null);\n  const [normalPrecipitation, setNormalPrecipitation] = useState('');\n\n  const handleDataUpload = (data) => {\n    // Process CSV data\n    const processedData = data.slice(1).map((row, index) => ({\n      name: `Station ${index + 1}`,\n      lat: parseFloat(row[0]),\n      lng: parseFloat(row[1]),\n      precipitation: parseFloat(row[2])\n    }));\n    setStations(processedData);\n  };\n\n  const handleManualAdd = (data) => {\n    const newStation = {\n      name: `Station ${stations.length + 1}`,\n      lat: parseFloat(data.latitude),\n      lng: parseFloat(data.longitude),\n      precipitation: parseFloat(data.precipitation)\n    };\n    setStations([...stations, newStation]);\n  };\n\n  const calculateResults = () => {\n    if (stations.length === 0 || !selectedMethod) {\n      alert('Please add stations and select a method');\n      return;\n    }\n\n    let calculatedValue;\n    switch (selectedMethod) {\n      case 'arithmetic':\n        calculatedValue = calculateArithmeticMean(stations);\n        break;\n      case 'normal-ratio':\n        if (!normalPrecipitation) {\n          alert('Please enter normal precipitation value');\n          return;\n        }\n        calculatedValue = calculateNormalRatio(stations, parseFloat(normalPrecipitation));\n        break;\n      case 'idw':\n        // For IDW, we'll use the center of all stations as the target point\n        const targetLat = stations.reduce((sum, s) => sum + s.lat, 0) / stations.length;\n        const targetLng = stations.reduce((sum, s) => sum + s.lng, 0) / stations.length;\n        calculatedValue = calculateIDW(stations, targetLat, targetLng);\n        break;\n      default:\n        calculatedValue = 0;\n    }\n\n    setResults({\n      calculatedValue,\n      stations,\n      method: selectedMethod\n    });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-100\">\n      <header className=\"bg-white shadow\">\n        <div className=\"max-w-7xl mx-auto py-6 px-4\">\n          <h1 className=\"text-3xl font-bold text-gray-900\">\n            Precipitation Calculator\n          </h1>\n        </div>\n      </header>\n\n      <main className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <div className=\"space-y-6\">\n            <DataPanel\n              onDataUpload={handleDataUpload}\n              onManualAdd={handleManualAdd}\n            />\n            <MethodSelector\n              selectedMethod={selectedMethod}\n              onMethodChange={setSelectedMethod}\n              normalPrecipitation={normalPrecipitation}\n              onNormalPrecipitationChange={setNormalPrecipitation}\n            />\n            <button\n              onClick={calculateResults}\n              className=\"w-full bg-blue-500 text-white p-3 rounded-lg hover:bg-blue-600\"\n            >\n              Calculate\n            </button>\n          </div>\n          \n          <div className=\"space-y-6\">\n            <MapComponent stations={stations} />\n            <ResultsSection results={results} />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}